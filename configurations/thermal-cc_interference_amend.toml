# Configuration name
name = "thermal-cc_interference_amend"
# Save path
save_path = "./data"
# Optional: Local backup path
backup_path = "./data/_backup"
# Optional: Action to perform if experiment directory exists
experiment_exists_action = "move" # overwrite, move, halt, update

# Optional: Backup configuration
# [BACKUP]
# user = ""
# host = ""
# ssh_key = ""
# port = ""
# path = ""

# Experiment settings
[EXPERIMENT]
type = "PerformanceExperiment"
channel = "Thermal"

[EXPERIMENT.PHASES]
trainHaswell      = {bit_count = 1500, symbol_rates = [1, 2, 3, 4],   repetitions = 3}
evalHaswell       = {bit_count = 5000, symbol_rates = [1, 2, 3, 4],   repetitions = 3}

# Experiment layers
[EXPERIMENT.LAYERS]
src = {name = "SourcePassthrough", params = {}}
lne = {name = "ManchesterLineCoding", params = {}}
rdp = {name = "CoreActivation", params = {}}
io = {name = "TimeValue", params = {timebase='ns'}}

# Experiment general settings
[EXPERIMENT.GENERAL]
latency = 10
fan = true
governors = "userspace"
frequencies = "max"
sampling_period = 1e-3
delay_after_spawn=30.0
delay_after_auxiliary = 1.0
active_wait = false

# --------------------------------------------------------------------------------------------------
# ENVIRONMENT: Haswell
# Apps and zones
[ENVIRONMENTS.Haswell.APPS]
snk = {executable = "meter_thermal_msr", zone = "host"}
src = {executable = "generator_utilisation_mt", zone = "host"}

# Platform settings -> source
[ENVIRONMENTS.Haswell.src]

# generator
generator.cpu_to_pin = 0
generator.cores = [1,3,5,7]
generator.policy = "round_robin"
generator.priority = 99
generator.worker_priority = 98
generator.start_check_period = 25

# logging
logging.debug_log_filename = "" # set during execution
logging.app_log_filename = "" # set during execution
logging.log_level = "info"

# schedule reader
schedule_reader.input_file = "" # set during execution
schedule_reader.reading_from_file = true

# Platform settings -> sink
[ENVIRONMENTS.Haswell.snk]

# logging
logging.debug_log_filename = "" # set during execution
logging.app_log_filename = "" # set during execution
logging.log_level = "info"

thermal_msr.cores = [0, 2, 4, 6]
thermal_msr.package = false

# host
host.period = 1e-3
host.policy = "round_robin"
host.pinning = 0
host.priority = 90
host.log_header = true
host.start_immediately = false
host.start_check_period = 25

[ENVIRONMENTS.Haswell.APPS."ffmpeg"]
executable = "ffmpeg"
type = "standalone"
start_individually = true
zone = "host"
args = [
"-y",
"-loglevel", "error",
"-stream_loop", "-1",
"-i", "media/video.mp4",
"-c:v", "libx264",
"-b:v", "1000k",
"-f", "null", "/dev/null"
]
